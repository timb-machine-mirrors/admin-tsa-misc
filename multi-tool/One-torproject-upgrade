#!/bin/sh

if [ "$#" -lt 1 ]; then
	echo >&2 "Usage: $0 <host>"
	exit 1
fi

host="$1"; shift
extra="$1"
set "dummy" "${extra:-}"
shift

echo $host
ssh -S none -l root $host -t '
	preok="'$1'";
	apt-get update &&
	if dpkg -l os-prober 2> /dev/null | grep -q "^ii"; then
		apt-get purge os-prober
	fi &&
	apt-get -s dist-upgrade &&
	sim=$(apt-get -s dist-upgrade | sed -e "s/$(dpkg --print-architecture)/-x-/g" | sha1sum | cut -f 1 -d" " ) &&
	if [ -n "$preok" ] && [[ "$sim" =~ $preok ]]; then
		TERM=screen DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade
	else
		echo "Sim is $sim"
		TERM=screen apt-get dist-upgrade
	fi &&
	apt-get clean &&
	apt-get --purge autoremove &&
	#sleep $(( $RANDOM % 240 )) && ( puppet agent -t || true ) &&
	if ! /usr/lib/nagios/plugins/dsa-check-running-kernel || (/usr/lib/nagios/plugins/dsa-check-libs | grep --color systemd); then
		echo "System reboot required."
	else
		(
		t="`tempfile`";
		trap "rm -f $t" 0 1 2 5 15;
		/usr/lib/nagios/plugins/dsa-check-libs > "$t"
		grep --color < "$t" stunnel4 && (service stunnel4 restart && sleep 3 && service ekeyd-egd-linux restart && sleep 3)
		grep --color < "$t" unbound && service unbound stop && sleep 1 && service unbound start && sleep 3
		grep --color < "$t" ntpd && service ntp stop && sleep 3 && service ntp start && sleep 3
		grep --color < "$t" syslog-ng && service syslog-ng restart && sleep 3
		grep --color < "$t" exim4 && service exim4 restart && sleep 3
		grep --color < "$t" "postfix: " && service postfix restart && sleep 3
		grep --color < "$t" fail2ban-server && service fail2ban restart && sleep 3
		grep --color < "$t" clamd && service clamav-daemon restart && sleep 3
		grep --color < "$t" freshclam && service clamav-freshclam restart && sleep 3
		grep --color < "$t" automount && service autofs restart && sleep 3
		grep --color < "$t" munin-node && service munin-node restart && sleep 3
		grep --color < "$t" munin-asyncd && service munin-async restart && sleep 3
		grep --color < "$t" rpcbind && service nfs-common restart && sleep 3
		grep --color < "$t" bacula-fd && sh -c "setsid /usr/local/sbin/bacula-idle-restart fd &" && sleep 3
		grep --color < "$t" bacula-sd && sh -c "setsid /usr/local/sbin/bacula-idle-restart sd &" && sleep 3
		grep --color < "$t" lldpd && service lldpd restart && sleep 3
		grep --color < "$t" libvirtd && service libvirt-bin restart && sleep 3
		grep --color < "$t" libvirtd && service libvirtd restart && sleep 3
		grep --color < "$t" virtlogd && pkill -u root -USR1 -f /usr/sbin/virtlogd && sleep 3
		grep --color < "$t" samhain && service samhain restart && sleep 3
		grep --color < "$t" uptimed && service uptimed restart && sleep 3
		grep --color < "$t" named && service bind9 restart && sleep 3
		grep --color < "$t" apache2 && service apache2 restart && sleep 3
		grep --color < "$t" rpc.statd && service nfs-common stop && sleep 3 && service nfs-common start && sleep 3
		grep --color < "$t" nrpe && service nagios-nrpe-server restart && sleep 3
		grep --color < "$t" monit && ! [ -L /sbin/init ] && start-stop-daemon --exec /usr/bin/monit --pidfile /var/run/monit.pid --user root --stop && sleep 3
		grep --color < "$t" ud-replicated && ! [ -L /sbin/init ] && start-stop-daemon --exec /usr/bin/python2.7 --name ud-replicated --user root --stop && sleep 3
		grep --color < "$t" "root:[^:]*sshd [^:)]*[ (]`cat /var/run/sshd.pid`[,)]" && service ssh restart && sleep 3
		grep --color < "$t" "buildd:[^:]*ssh " && sudo -H -i -u buildd ssh -S build/buildd.debian.org.ssh buildd.debian.org -O exit && sleep 3
		grep --color < "$t" "buildd2:[^:]*ssh " && sudo -H -i -u buildd2 ssh -S build/buildd.debian.org.ssh buildd.debian.org -O exit && sleep 3
		grep --color < "$t" "munin-async: sshd " && pkill -HUP -u munin-async sshd
		grep --color < "$t" "debian-tor:[^:]* tor " && service tor restart && ( if [ -e /etc/onionbalance ]; then sleep 15 && service onionbalance restart; fi ) && sleep 3
		#
		rm -f "$t";
		trap - 0 1 2 5 15;
		)
	fi &&
	(/usr/lib/nagios/plugins/dsa-check-libs || true)
	if [ -e /var/cache/dsa/nagios/apt ]  && ! grep "^OK" /var/cache/dsa/nagios/apt ; then /usr/sbin/dsa-update-apt-status; fi ||
	(echo "something failed, press enter"; read dummy)
'
sleep 15
